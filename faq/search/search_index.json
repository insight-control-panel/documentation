{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Configurations \u00b6 This section provides small configurations snippets for things you might not know from scratch.","title":"Configurations"},{"location":"#configurations","text":"This section provides small configurations snippets for things you might not know from scratch.","title":"Configurations"},{"location":"dynamic_combo_box/","text":"Dynamic Combo box \u00b6 Combo- or Dropdown-Boxes have to be, by default, configured with a static dictionary of keys and values. You can load this dictionary from a script with this configuration: { \"attributes\": [ { \"label\": \"Team\", \"name\": \"resourceId\", \"type\": \"String\", \"control\": \"enabled\", \"section\": \"Team-Auswahl\", \"widget\": \"Combo\", \"clientProperties\": { \"attributeControl\": { \"js\": [ \"remote.action('business-suite/wka/teams-list', {})\", \" .then(\", \" function (data) { attribute.options = data.options; }\", \" )\" ] } }, \"options\": { \"dictionary\": [] } } ] } The corresponding script has to return a list of key:value objects: // Returns list to be shown in dropdown of a form-dialog def options = [] sql.eachRow(\"\"\" SELECT id, name, description FROM Resource as team WHERE team.classificationName = 'TEAM' AND team.siteName = 'WKA' \"\"\") { team -> String id = team[0] String name = team[1] String description = team[2] options.push([label: name, value: id, description: description]) } return jsonObject(options: options)","title":"Dynamic Combo box"},{"location":"dynamic_combo_box/#dynamic-combo-box","text":"Combo- or Dropdown-Boxes have to be, by default, configured with a static dictionary of keys and values. You can load this dictionary from a script with this configuration: { \"attributes\": [ { \"label\": \"Team\", \"name\": \"resourceId\", \"type\": \"String\", \"control\": \"enabled\", \"section\": \"Team-Auswahl\", \"widget\": \"Combo\", \"clientProperties\": { \"attributeControl\": { \"js\": [ \"remote.action('business-suite/wka/teams-list', {})\", \" .then(\", \" function (data) { attribute.options = data.options; }\", \" )\" ] } }, \"options\": { \"dictionary\": [] } } ] } The corresponding script has to return a list of key:value objects: // Returns list to be shown in dropdown of a form-dialog def options = [] sql.eachRow(\"\"\" SELECT id, name, description FROM Resource as team WHERE team.classificationName = 'TEAM' AND team.siteName = 'WKA' \"\"\") { team -> String id = team[0] String name = team[1] String description = team[2] options.push([label: name, value: id, description: description]) } return jsonObject(options: options)","title":"Dynamic Combo box"},{"location":"client/common/","text":"Common \u00b6","title":"Common"},{"location":"client/common/#common","text":"","title":"Common"},{"location":"client/foobar/","text":"Foobar \u00b6","title":"Foobar"},{"location":"client/foobar/#foobar","text":"","title":"Foobar"},{"location":"server/common/","text":"Common \u00b6","title":"Common"},{"location":"server/common/#common","text":"","title":"Common"},{"location":"server/foobar/","text":"Foobar \u00b6","title":"Foobar"},{"location":"server/foobar/#foobar","text":"","title":"Foobar"}]}
{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "title": "Insight Configuration",
  "invisible": false,
  "description": "A configuration defines permissions, layout, data model and actions for one specific use case/scenario (e.g. stocktaking, work planning or work confirmation).",
  "properties": {
    "name": {
      "type": "string",
      "title": "Name",
      "disabled": true,
      "description": "Name must match the filename and is used internally. The Indexer requires that the sum length of app name and child name never exceeds 33!",
      "pattern": "^[a-z0-9_-]*$"
    },
    "title": {
      "type": "string",
      "title": "Title",
      "description": "Used in Insight perspectives to help the user to identify the specific use case/scenario which is addressed in the configuration."
    },
    "module": {
      "type": "string",
      "title": "Module",
      "description": "Categorizes the use cases"
    },
    "icon": {
      "type": "string",
      "default": "icon-",
      "description": "Used in Insight perspectives to help the user to identify the specific use case/scenario which is addressed in the configuration.",
      "pattern": "^icon-[a-z-]+$"
    },
    "order": {
      "type": "number",
      "description": "Order of the trees."
    },
    "externalPersistence": {
      "type": "string",
      "anyOf": [
        {
          "type": "string",
          "enum": ["es"],
          "description": "ElasticSearch Persistence"
        }
      ]
    },
    "roles": {
      "type": "array",
      "title": "Roles",
      "description": "Attach user roles to menu entry. Only available if role is available for user",
      "items": {
        "type": "string",
        "default": "SKIP-AUTHORIZATION"
      },
      "default": ["SKIP-AUTHORIZATION"]
    },
    "rolesReadonly": {
      "type": "array",
      "title": "Readonly Roles",
      "description": "Readonly Roles define trees as readonly. Roles must also be defined in the roles parameter to make the tree available at all",
      "items": {
        "type": "string",
        "default": ""
      },
      "default": []
    },
    "visibleIn": {
      "type": "array",
      "$ref": "#/definitions/visibleIn"
    },
    "visibleFunction": {
      "type": "object",
      "description": "Function to further limit the visibility. Parameters are the user-profile of the logged in person and the current client -> (userData, client)",
      "properties": {
        "js": {
          "oneOf": [
            {
              "type": "array"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      "default": {
        "js": ["", ""]
      }
    },
    "download": {
      "type": "object",
      "properties": {
        "cacheDuration": {
          "type": "string"
        },
        "mode": {
          "type": "string",
          "enum": ["auto", "view", "auto_view"]
        }
      }
    },
    "sections": {
      "title:": "Sections",
      "type": "array",
      "description": "Sections can be used for grouping attributes of one node in the detail view.\n- Attributes of one node are listed in the configured order.\n- Each attribute can be assigned to a section\n- Sections are presented in the configured order\n- Section attributes are listed in the order configured in the attributes array\n- Sections are displayed in a responsive way (one column or two columns depending on display resolution)\n- Sections can be reused in every detail view of one Insight Config configuration",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "default": "",
            "minLength": 1
          },
          "label": {
            "title": "Label",
            "type": "string"
          },
          "style": {
            "title": "Style",
            "type": "string",
            "anyOf": [
              {
                "enum": ["block"],
                "title": "full span",
                "description": "full span"
              },
              {}
            ]
          }
        },
        "additionalProperties": false,
        "required": ["name", "label", "style"],
        "default": {
          "name": "",
          "label": "",
          "style": ""
        }
      },
      "default": []
    },
    "dnd": {
      "description": "Insight Explorer offers drag and drop functionality in three different scenarios\n- Tree node item to text/input field: copies label of the node item to the field\n- Tree node item to foreign key/key field: copies the key into the field (e.g. type of node item is Location. The drop field is attribute location of type Workorder)\n- (Tree internal) from node item 1 to node item 2\n\nThe first two options are running out of the box. There is no configuration needed. The third option has to be configured in the top level section of a configuration",
      "type": "array",
      "title": "DnD",
      "items": {
        "type": "object",
        "properties": {
          "src": {
            "title": "Source",
            "description": "Name of drag node",
            "type": "string"
          },
          "dst": {
            "title": "Destination",
            "description": "Name of the drop node",
            "type": "string"
          },
          "notifySrc": {
            "description": "Behavior for notifying UI of changes caused by drag&drop",
            "oneOf": [
              {
                "enum": ["IGNORE"]
              },
              {
                "enum": ["DELETE"],
                "description": "(default) use if action removes drag-source from parent "
              },
              {
                "enum": ["UPDATE"],
                "description": "use if action modifies drag-source"
              },
              {
                "enum": [false],
                "description": "use if action does not modify drag-source. No UI Update"
              }
            ]
          },
          "notifyDst": {
            "description": "Behavior for notifying UI of changes caused by drag&drop",
            "oneOf": [
              {
                "enum": ["NEW"],
                "description": "(default) use if action adds child-records to drop-destination"
              },
              {
                "enum": ["UPDATE"],
                "description": "use if action modifies drop-destination"
              },
              {
                "enum": [false],
                "description": "use if action does not modify drop-destination. No UI Update."
              }
            ]
          },
          "dstCondition": {
            "type": "object"
          },
          "action": {
            "$ref": "#/definitions/anyMenu"
          },
          "clientProperties": {
            "type": "object",
            "minProperties": 1,
            "properties": {
              "checkBefore": {
                "type": "string"
              },
              "action": {
                "$ref": "#/definitions/thenMenu"
              },
              "allowRowSwitching": {
                "type": "boolean",
                "enum": [false]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false,
        "required": ["src", "dst", "clientProperties"],
        "default": {
          "src": "",
          "dst": "",
          "clientProperties": {
            "action": {
              "action": "request",
              "request": {
                "method": "POST",
                "url": "insight/action//",
                "params": {
                  "attribute": "${value}"
                },
                "headers": {
                  "Accept": "application/json",
                  "Content-Type": "application/json"
                }
              }
            }
          }
        }
      },
      "default": [
        {
          "src": "",
          "dst": "",
          "clientProperties": {
            "action": {
              "action": "request",
              "request": {
                "method": "POST",
                "url": "insight/action//",
                "params": {
                  "attribute": "${value}"
                },
                "headers": {
                  "Accept": "application/json",
                  "Content-Type": "application/json"
                }
              }
            }
          }
        }
      ]
    },
    "clientProperties": {
      "type": "object",
      "minProperties": 1,
      "description": "The default behavior of a perspective",
      "title": "Client Properties",
      "properties": {
        "rootMode": {
          "description": "Behavior of the initial listing (root nodes), default: listing of all matching root nodes",
          "type": "string",
          "oneOf": [
            {
              "enum": ["search"],
              "description": "no initial listing (if there are too many results expected) listing refers to search entries"
            },
            {
              "enum": ["select"],
              "description": "no initial listing, only nodes selected from search will be shown in tree"
            },
            {
              "enum": ["createOnly"],
              "description": "create button in top level section; listing of created data sets (offline)"
            },
            {
              "enum": ["filter"],
              "description": "no initial listing, a filter must be activated"
            }
          ]
        },
        "searchHidden": {
          "title": "Search Hidden",
          "description": "Hide search button",
          "type": "boolean",
          "enum": [true],
          "default": true
        },
        "searchOfflineOnly": {
          "type": "boolean",
          "description": "Offline-search, Insight X-Ray is not setup or not connected",
          "enum": [true],
          "default": true
        },
        "openSingleSearchResult": {
          "type": "boolean",
          "description": "Open detail view automatically if there is a single hit in the search result",
          "enum": [true],
          "default": true
        },
        "newAllowed": {
          "title": "New Allowed",
          "description": "Show button for creating new root objects",
          "type": "boolean",
          "enum": [true],
          "default": true
        },
        "hidden": {
          "type": "boolean",
          "description": "Hide tree in main menu (tree is only used as a value picker)",
          "enum": [true],
          "default": true
        },
        "filter": {
          "type": "array",
          "description": "'Attributename' filters list of (root) nodes; filter-values correspond to distinct values of attribute 'Attributename'",
          "items": {
            "type": "object"
          },
          "default": []
        },
        "clearSearch": {
          "type": "boolean",
          "description": "Removes the search text when the page is entered.",
          "enum": [true],
          "default": true
        },
        "searchPattern": {
          "type": "string",
          "description": "Automatically add * wildcards while searching.",
          "oneOf": [
            {
              "enum": ["startsWith"],
              "description": "Example: test*"
            },
            {
              "enum": ["contains"],
              "description": "Example: *test*"
            },
            {
              "enum": ["endsWith"],
              "description": "Example: *test"
            }
          ]
        },
        "scanBarcode": {
          "type": "boolean",
          "description": "Always opens the search tab with a bar scanner",
          "enum": [true],
          "default": true
        }
      }
    },
    "menus": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/anyMenu"
      },
      "default": []
    },
    "root": {
      "title": "Root",
      "description": "Root of the data model",
      "stop": "true",
      "$ref": "#/definitions/treeObject"
    }
  },
  "additionalProperties": false,
  "required": ["name", "roles", "title", "icon", "root", "visibleIn"],
  "definitions": {
    "treeObject": {
      "type": "object",
      "description": "Node in the tree",
      "properties": {
        "voice": {
          "type": "object",
          "description": "Kidou Voice Command recognition",
          "properties": {
            "threshold": {
              "type": "number",
              "description": "The threshold after which a command is matched"
            },
            "url": {
              "type": "string",
              "description": "The url of the Kidou backend to connect to"
            },
            "reconnect": {
              "type": "number",
              "description": "The amount of times Insight is going to try to reconnect in case of instable network connection"
            }
          }
        },
        "loop": {
          "type": "boolean",
          "disabled": true,
          "default": false,
          "enum": [false]
        },
        "query": {
          "type": "object",
          "$ref": "#/definitions/queryObject"
        },
        "queryParams": {
          "default": {
            "name": "",
            "attribute": ""
          },
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "attribute": {
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "required": ["name", "attribute"]
            },
            {
              "type": "object",
              "properties": {
                "and": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "attribute": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "required": ["name", "attribute"]
                  }
                }
              }
            },
            {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "attribute": {
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "required": ["name", "attribute"]
              }
            }
          ]
        },
        "grouping": {
          "description": "Allows to put objects into chunks and/or group them together by certain attribute values",
          "anyOf": [
            {
              "$ref": "#/definitions/grouping"
            },
            {
              "description": "Groups in groups",
              "type": "array",
              "items": {
                "$ref": "#/definitions/grouping"
              }
            }
          ]
        },
        "views": {
          "additionalProperties": false,
          "description": "Allows to put objects into chunks and/or group them together by certain attribute values",
          "type": "object",
          "properties": {
            "list": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "icon": {
                  "type": "string",
                  "pattern": "^icon-[a-z-]+$",
                  "default": ""
                },
                "inlineCreate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "tree": {
                      "type": "string"
                    },
                    "node": {
                      "type": "string"
                    },
                    "attributes": {
                      "type": "array",
                      "action": "openSelectDialog",
                      "actionParam": "name",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/definitions/attribute"
                          },
                          {
                            "$ref": "#/definitions/labelHiddenAttribute"
                          }
                        ]
                      },
                      "default": [
                        {
                          "name": "",
                          "label": ""
                        }
                      ]
                    }
                  }
                }
              }
            },
            "calendar": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "icon": {
                  "type": "string",
                  "pattern": "^icon-[a-z-]+$",
                  "default": ""
                },
                "start": {
                  "type": "string"
                },
                "end": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "inlineCreate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "tree": {
                      "type": "string"
                    },
                    "node": {
                      "type": "string"
                    },
                    "attributes": {
                      "type": "array",
                      "action": "openSelectDialog",
                      "actionParam": "name",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/definitions/attribute"
                          },
                          {
                            "$ref": "#/definitions/labelHiddenAttribute"
                          }
                        ]
                      },
                      "default": [
                        {
                          "name": "",
                          "label": ""
                        }
                      ]
                    }
                  }
                }
              }
            },
            "kanban": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "icon": {
                  "type": "string",
                  "pattern": "^icon-[a-z-]+$",
                  "default": ""
                },
                "laneAttribute": {
                  "type": "string"
                },
                "laneChild": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "label": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                },
                "inlineCreate": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "tree": {
                      "type": "string"
                    },
                    "node": {
                      "type": "string"
                    },
                    "attributes": {
                      "type": "array",
                      "action": "openSelectDialog",
                      "actionParam": "name",
                      "items": {
                        "oneOf": [
                          {
                            "$ref": "#/definitions/attribute"
                          },
                          {
                            "$ref": "#/definitions/labelHiddenAttribute"
                          }
                        ]
                      },
                      "default": [
                        {
                          "name": "",
                          "label": ""
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "sortBy": {
          "type": "object",
          "description": "Defines the order",
          "properties": {
            "attribute": {
              "type": "string",
              "description": "The Attribute the sorting refers to"
            },
            "descending": {
              "type": "boolean",
              "description": "Sort from hight values down to low values"
            },
            "thenBy": {
              "$ref": "#/definitions/subordinatedSorting"
            }
          },
          "additionalProperties": false,
          "required": ["attribute"]
        },
        "children": {
          "type": "array",
          "title": "Children",
          "minItems": 1,
          "description": "Sub elements of treeitem",
          "action": "openSelectDialog",
          "actionParam": "type",
          "items": {
            "type": "object",
            "oneOf": [
              {
                "$ref": "#/definitions/treeObject"
              },
              {
                "$ref": "#/definitions/loopObject"
              }
            ]
          },
          "default": []
        },
        "name": {
          "description": "Defines name of the node\n - unique\n - must match name defined in corresponding mappings .json\n - is used for standard aggregation of search results (Insight Explorer)\n - The Indexer requires that the sum length of app name and child name never exceeds 33!",
          "type": "string",
          "default": ""
        },
        "type": {
          "type": "string",
          "meta": "metaType",
          "description": "Defines the backend specific object type"
        },
        "title": {
          "description": "Label for UI presentation (bucket (Insight Explorer), header (Insight Mobile))",
          "type": "string"
        },
        "label": {
          "decription:": "used in perspectives to help users identifying the data record\n- ${ATTRIBUTENAME} is dynamically replaced with the value of the attribute with the name ATTRIBUTENAME",
          "type": "string"
        },
        "temporal": {
          "type": "object",
          "properties": {
            "start": {
              "description": "attribute for the start of a range to show this node. (Used by gantt)",
              "type": "string"
            },
            "finish": {
              "description": "attribute for the finish of a range to show this node. (Used by gantt)",
              "type": "string"
            }
          },
          "default": {
            "start": "startDate",
            "finish": "finishDate"
          }
        },
        "planning": {
          "description": "configuration of gantt tasks and rows",
          "type": "object",
          "properties": {
            "task": {
              "type": "boolean",
              "description": "Show node as task. Only allowed if the parent-node or the node itself is defined as a row.\nThe start and finish of the task is calculated by the overlapping ranges of the nodes to the root.\nThe label is the label of the node including the time range.",
              "default": true
            },
            "row": {
              "type": "boolean",
              "description": "show node as row in gantt.\nUnassigned ranges in childrows are shown as unavailable tasks.",
              "default": true
            },
            "capacity": {
              "description": "Capacity Planning in gannt. Based on evaluating the sub-tree of a task",
              "type": "object",
              "properties": {
                "classification": {
                  "description": "attribute used for classification in capacity planning",
                  "type": "string"
                },
                "quantity": {
                  "description": "attribute used for quantity in capacity planning. Defaults to 1 if not specified",
                  "type": "string"
                },
                "label": {
                  "type": "string",
                  "description": "Label to use to prefix message"
                }
              },
              "anyof": [
                {
                  "properties": {
                    "type": {
                      "description": "define node as a requirement",
                      "enum": ["requirement"]
                    }
                  },
                  "required": ["classification"]
                },
                {
                  "properties": {
                    "type": {
                      "description": "activity to specify if resource is available",
                      "enum": ["activity"]
                    }
                  }
                },
                {
                  "properties": {
                    "type": {
                      "description": "resource to use to fulfill requirement",
                      "enum": ["resource"]
                    }
                  },
                  "required": ["classification"]
                },
                {
                  "properties": {
                    "type": {
                      "description": "detect as collision if record with non-zero length is found",
                      "enum": ["collision"]
                    }
                  }
                }
              ]
            },
            "css": {
              "description": "CSS class to apply to the gantt-task or gantt-row",
              "type": "string"
            }
          },
          "default": {
            "task": true,
            "row": true,
            "capacity": {
              "type": "",
              "classification": "classificationName",
              "quantity": "quantity"
            }
          }
        },
        "color": {
          "type": "string",
          "description": "color to use to display this node in hexadecimal format (#RRGGBB). (Used by gantt).\n${ATTRIBUTENAME} is dynamically replaced with the value of the attribute with the name ATTRIBUTENAME",
          "default": "#FF0000"
        },
        "icon": {
          "description": "used in perspectives to help users identifying the data record",
          "type": "string",
          "pattern": "^icon-[a-z-]+$",
          "default": ""
        },
        "bucket": {
          "type": "string"
        },
        "bucketIcon": {
          "type": "string",
          "pattern": "^icon-[a-z-]+$",
          "default": ""
        },
        "bucketMode": {
          "type": "string",
          "description": "Instead of displaying the entries directly, the bucket links to the separate view. 'headerOnly': No children are displayed inline. 'simple': Children are displayed inline, but no list attributes are displayed.",
          "enum": ["headerOnly", "simple"]
        },
        "bucketExpanded": {
          "type": "boolean",
          "description": "Flag to decide whether bucket is expanded by default",
          "default": true
        },
        "menus": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/anyMenu"
          },
          "default": [
            {
              "label": "Details",
              "action": "details",
              "icon": "icon-question-circle"
            },
            {
              "label": "Aktualisieren",
              "icon": "icon-refresh",
              "action": "refresh"
            }
          ]
        },
        "style": {
          "description": "The style property can be used to decorate list entries. It is possible to reflect the specific values of important attributes in the choice of signal color or icon.",
          "type": "object",
          "minProperties": 1,
          "properties": {
            "js": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "default": {
            "js": ["", ""]
          }
        },
        "isReady": {
          "description": "With this feature you can show if a record is ready processed.",
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "js": {
              "description": "Javascript function which must return a boolean value.",
              "type": "string"
            }
          }
        },
        "attributes": {
          "type": "array",
          "action": "openSelectDialog",
          "actionParam": "name",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/attribute"
              },
              {
                "$ref": "#/definitions/labelHiddenAttribute"
              }
            ]
          },
          "default": []
        },
        "documents": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "label": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "backendParams": {
                "type": "object",
                "properties": {
                  "relation": {
                    "type": "string"
                  },
                  "orientation": {
                    "type": "string"
                  },
                  "pictureType": {
                    "type": "string"
                  },
                  "nameAttribute": {
                    "type": "string"
                  },
                  "pathAttribute": {
                    "type": "string"
                  }
                }
              },
              "attributes": {
                "type": "array",
                "action": "openSelectDialog",
                "actionParam": "name",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/definitions/attribute"
                    },
                    {
                      "$ref": "#/definitions/labelHiddenAttribute"
                    }
                  ]
                },
                "default": []
              }
            },
            "required": ["label", "name", "type"]
          },
          "default": [
            {
              "handler": "insight",
              "name": "",
              "label": "",
              "type": "Foto",
              "backendParams": {
                "attribute": "${value}"
              },
              "clientProperties": {
                "nodeReference": "documents"
              },
              "attributes": []
            }
          ]
        },
        "clientProperties": {
          "type": "object",
          "minProperties": 1,
          "properties": {
            "OS": {
              "type": "string"
            },
            "excludeExpertSearch": {
              "type": "boolean",
              "description": "To exclude from expert search",
              "default": true
            },
            "saveAndNew": {
              "type": "boolean",
              "description": "enables sequence of creating new records in a detail view of current node",
              "default": true
            },
            "saveAndNewStayAttributes": {
              "type": "array",
              "description": "Attribute value of saved record is preset for attribute value of next created record (precaution: 'saveAndNew':true)",
              "items": {
                "type": "string"
              },
              "default": []
            },
            "saveAndNewFocusAttribute": {
              "type": "string",
              "description": "'Attributename'. Sets focus on attribute 'Attributename' in detail view of created node record (precaution: 'saveAndNew':true)"
            },
            "saveAndNext": {
              "type": "boolean",
              "description": "Displays the next list entry after saving",
              "default": true
            },
            "saveAndList": {
              "type": "boolean",
              "description": "Pressing save on detail view navigates automatically to search view",
              "default": true
            },
            "saveAndGoto": {
              "type": "object",
              "description": "Go to another view after saving",
              "properties": {
                "srcNode": {
                  "type": "string",
                  "description": "Node name of the record to link to."
                },
                "dstTree": {
                  "type": "string",
                  "description": "Tree to show the link."
                },
                "dstNode": {
                  "type": "string",
                  "description": "Node to show the link."
                },
                "create": {
                  "type": "string",
                  "description": "Show the node in create mode"
                }
              }
            },
            "saveButtonText": {
              "type": "string",
              "description": "Label of search button"
            },
            "saveButtonCreateText": {
              "type": "string",
              "description": "Label of save button on record creation views"
            },
            "searchThis": {
              "type": "boolean",
              "description": "branch to other Insight Config configurations (was before searchThisHidden)",
              "default": true
            },
            "saveAndBack": {
              "type": "integer",
              "description": "Displays a previous view after saving",
              "default": 1
            },
            "footerButtons": {
              "type": "boolean",
              "description": "Displays the save and cancel button in an always visible footer",
              "default": true
            },
            "swipeAll": {
              "type": "object",
              "description": "Displays all swipe actions of the node. Currently only available on root list view.",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Label of the action"
                },
                "icon": {
                  "type": "string",
                  "description": "Icon of the action",
                  "pattern": "^icon-[a-z-]+$",
                  "default": ""
                },
                "open": {
                  "type": "boolean",
                  "description": "Initial active?"
                }
              }
            },
            "labelClass": {
              "type": "string",
              "description": "CSS-Class for the label in lists. Example: bold color-red"
            },
            "labelWidth": {
              "type": ["number", "string"],
              "description": "This attribute label gets the width in px. Works only with labelBeside = true",
              "default": "100"
            },
            "labelBeside": {
              "type": "boolean",
              "description": "The attribute label will displayed next to the input",
              "default": true
            },
            "detailsLink": {
              "type": "object",
              "properties": {
                "dstTree": {
                  "type": "string",
                  "default": ""
                },
                "dstNode": {
                  "type": "string",
                  "default": ""
                }
              },
              "default": {
                "dstTree": "",
                "dstNode": ""
              }
            }
          }
        },
        "saveAction": {
          "description": "http request which is called at save",
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            },
            "method": {
              "type": "string",
              "description": "http method",
              "enum": ["GET", "POST"]
            },
            "params": {
              "description": "http POST or GET parameters",
              "type": "object"
            },
            "header": {
              "description": "http headers",
              "type": "object"
            },
            "afterSave": {
              "description": "After saving, actions can be performed. The same actions are available as with Menu.",
              "type": "object",
              "$ref": "#/definitions/thenMenu"
            }
          },
          "default": {
            "url": "insight/eam/rpc/SKRIPTNAME",
            "method": "POST",
            "params": {
              "": "${}"
            },
            "headers": {
              "Content-Type": "application/x-www-form-urlencoded"
            }
          }
        },
        "classification": {
          "description": "Classification can be used in every node that is configured with a class using classifications.",
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean"
            },
            "insertBefore": {
              "type": "string"
            }
          }
        },
        "list": {
          "description": "Mobile only: Multi line list entries.",
          "type": "object",
          "properties": {
            "attributes": {
              "description": "Attributes to be shown in multi lines. Properties of the attributes can be overridden.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/listAttribute",
                "style": {
                  "description": "used to format the way the attribute is visualized",
                  "type": "string",
                  "pattern": "^icon-[a-z-]+$",
                  "default": ""
                },
                "required": ["name"],
                "suppressFilter": {
                  "description": "Suppress the filter on roots",
                  "type": "boolean"
                },
                "default": {
                  "name": ""
                }
              },
              "default": [
                {
                  "name": ""
                }
              ]
            },
            "separateView": {
              "type": "boolean",
              "description": "Instead of displaying the entries directly, the bucket links to the separate view.",
              "default": true
            },
            "textOverflow": {
              "description": "Truncate at the end of a line and attach ...",
              "type": "string",
              "enum": ["ellipsis"],
              "default": "ellipsis"
            },
            "settings": {
              "description": "Truncate at the end of a line and attach ...",
              "type": "object",
              "default": {
                "pageSize": 15,
                "pageSizeOptions": [],
                "hideSorter": false,
                "hideFilter": false
              },
              "properties": {
                "pageSize": {
                  "type": "integer",
                  "default": 15
                },
                "pageSizeOptions": {
                  "type": "array",
                  "default": []
                },
                "hideSorter": {
                  "type": "boolean",
                  "default": false
                },
                "hideFilter": {
                  "type": "boolean",
                  "default": false
                },
                "useSelectedItems": {
                  "type": "boolean",
                  "default": true
                },
                "hidePdfDownload": {
                  "type": "boolean",
                  "default": true
                },
                "hideCsvDownload": {
                  "type": "boolean",
                  "default": true
                },
                "pdf": {
                  "type": "object",
                  "attributes": {
                    "$ref": "#/definitions/treeObject/properties/list/properties/attributes",
                    "description": "Attributes to be shown in multi lines. Properties of the list attributes can be overridden."
                  }
                },
                "csv": {
                  "type": "object",
                  "attributes": {
                    "$ref": "#/definitions/treeObject/properties/list/properties/attributes",
                    "description": "Attributes to be shown in multi lines. Properties of the list attributes can be overridden."
                  }
                },
                "columnConfiguration": {
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "object"
                    }
                  ]
                }
              }
            },
            "filter": {
              "type": "object",
              "description": "Either true, to enable filter for all, or an array to list all attributes that should have a filter",
              "properties": {
                "attributes": {
                  "anyOf": [
                    {
                      "type": "boolean",
                      "default": true,
                      "enum": [true]
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "default": [""]
                    }
                  ]
                }
              },
              "default": {}
            }
          },
          "default": {
            "attributes": [
              {
                "name": ""
              }
            ]
          }
        },
        "listEdit": {
          "description": "Mobile only: Multiple records can be edited on one page.",
          "type": "object",
          "properties": {
            "title": {
              "description": "Overrides the title of the node",
              "type": "string"
            },
            "icon": {
              "description": "Overrides the icon of the node",
              "type": "string",
              "pattern": "^icon-[a-z-]+$",
              "default": ""
            },
            "headerHidden": {
              "description": "Hides the header of each list entry",
              "type": "boolean"
            },
            "attributes": {
              "description": "Attributes to be shown in multi lines. Properties of the attributes can be overridden.",
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/definitions/attribute"
                  },
                  {
                    "$ref": "#/definitions/labelHiddenAttribute"
                  }
                ],
                "required": ["name"]
              }
            }
          }
        },
        "fileLink": {
          "description": "A file can be linked to the record. The file must be retrieved via a URL. The deposited files can also be downloaded.",
          "type": "object",
          "properties": {
            "url": {
              "description": "To retrieve the file",
              "type": "string"
            },
            "fileName": {
              "description": "To store the file with a correct filename. This property is optional and only must be set if the url does not contain a file name with extension",
              "type": "string"
            },
            "download": {
              "description": "Download the files when the common download is performed",
              "type": "boolean"
            },
            "default": {
              "url": "",
              "filename": ""
            }
          }
        }
      },
      "additionalProperties": false,
      "default": {
        "name": "",
        "title": "",
        "icon": "icon",
        "label": "${}",
        "attributes": [
          {
            "name": "",
            "label": ""
          }
        ]
      },
      "required": ["name", "title", "label", "attributes"]
    },
    "loopObject": {
      "type": "object",
      "description": "Node in the tree",
      "properties": {
        "loop": {
          "type": "boolean",
          "default": true,
          "enum": [true]
        },
        "query": {
          "type": "object",
          "$ref": "#/definitions/queryObject"
        },
        "type": {
          "type": "string",
          "meta": "metaType",
          "description": "Defines the backend specific object type"
        },
        "title": {
          "description": "Label for UI presentation (bucket (Insight Explorer), header (Insight Mobile))",
          "type": "string"
        },
        "label": {
          "decription:": "used in perspectives to help users identifying the data record\n- ${ATTRIBUTENAME} is dynamically replaced with the value of the attribute with the name ATTRIBUTENAME",
          "type": "string"
        },
        "color": {
          "type": "string",
          "description": "color to use to display this node in hexadecimal format (#RRGGBB). (Used by gantt).\n${ATTRIBUTENAME} is dynamically replaced with the value of the attribute with the name ATTRIBUTENAME",
          "default": "#FF0000"
        },
        "icon": {
          "description": "used in perspectives to help users identifying the data record",
          "type": "string",
          "pattern": "^icon-[a-z-]+$",
          "default": ""
        },
        "bucket": {
          "type": "string"
        },
        "bucketIcon": {
          "type": "string",
          "pattern": "^icon-[a-z-]+$",
          "default": ""
        },
        "bucketMode": {
          "type": "string",
          "description": "Instead of displaying the entries directly, the bucket links to the separate view. 'headerOnly': No children are displayed inline. 'hidden': Bucket and children are hidden.",
          "enum": ["headerOnly", "hidden"]
        },
        "bucketExpanded": {
          "type": "boolean",
          "description": "Flag to decide whether bucket is expanded by default",
          "default": true
        },
        "style": {
          "description": "The style property can be used to decorate list entries. It is possible to reflect the specific values of important attributes in the choice of signal color or icon.",
          "type": "object",
          "minProperties": 1,
          "properties": {
            "js": {
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "array"
                }
              ]
            }
          },
          "default": {
            "js": ["", ""]
          }
        },
        "isReady": {
          "description": "With this feature you can show if a record is ready processed.",
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "js": {
              "description": "Javascript function which must return a boolean value.",
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false,
      "default": {
        "loop": true,
        "type": "",
        "title": "",
        "icon": "icon",
        "label": "${}"
      }
    },
    "visibleIn": {
      "description": "Perspectives",
      "type": "array",
      "items": {
        "type": "string",
        "anyOf": [
          {
            "enum": ["web"],
            "title": "Insight Explorer",
            "description": "Enables Insight Explorer and Insight X-Ray"
          },
          {
            "enum": ["tab"],
            "title": "Insight Tab",
            "description": "Enables configuration to be shown in Insight Tab Menu"
          },
          {
            "enum": ["mobile"],
            "title": "Insight Mobile",
            "description": "Enables Insight Mobile"
          },
          {
            "enum": ["no-web"],
            "title": "Insight Mobile",
            "description": "Required for Database Adapters"
          }
        ]
      },
      "uniqueItems": true,
      "default": ["web", "mobile"]
    },
    "subordinatedSorting": {
      "type": "object",
      "description": "Subordinated Sorting",
      "properties": {
        "attribute": {
          "type": "string",
          "description": "The Attribute the sorting refers to"
        },
        "descending": {
          "type": "boolean",
          "description": "Sort from hight values down to low values"
        },
        "thenBy": {
          "$ref": "#/definitions/subordinatedSorting"
        }
      },
      "additionalProperties": false,
      "required": ["attribute"]
    },
    "grouping": {
      "description": "Allows to put objects into chunks and/or group them together by certain attribute values",
      "type": "object",
      "properties": {
        "size": {
          "description": "How many objects are put into one chunk",
          "type": "number",
          "default": 10000
        },
        "label": {
          "description": "Label for chunks",
          "type": "string"
        },
        "attribute": {
          "description": "Attribute to build groups",
          "type": "string"
        },
        "groups": {
          "description": "Define groups and their order that should always exist",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string",
                "description": "Fix label of the group"
              },
              "values": {
                "type": "string",
                "description": "Object with this attribute value will be sort in that group"
              },
              "expanded": {
                "type": "boolean",
                "description": "Expand the group node by default"
              },
              "others": {
                "type": "string",
                "description": "Expand the group node by default",
                "default": "catch"
              }
            },
            "default": []
          }
        }
      },
      "default": {
        "size": 10000
      }
    },
    "attribute": {
      "title": "Attribute",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "meta": "metaAttribute"
        },
        "label": {
          "title": "Label",
          "description": "Label of an Attribute",
          "type": "string"
        },
        "type": {
          "description": "Value of 'type' must match the type in the backend. Required with formfields",
          "type": "string",
          "default": "String",
          "enum": [
            "String",
            "Boolean",
            "Date",
            "Text",
            "Decimal",
            "Born",
            "LocalDate"
          ]
        },
        "columnWidth": {
          "description": "Required with formfields",
          "type": "string",
          "default": "50"
        },
        "format": {
          "type": "string",
          "description": "Formats the output of the attribute",
          "default": "pattern:'dd.MM.yyyy HH:mm:ss'"
        },
        "formField": {
          "type": "boolean",
          "description": "Form-Fields are not read/written on server side",
          "default": true
        },
        "options": {
          "description": "Value lists\n- Can be node items of another Insight Config configuration (see chapter Working with attributes)\n- Or can be listed directly",
          "type": "object",
          "properties": {
            "hint": {
              "type": "string",
              "default": null
            },
            "dictionary": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  },
                  "value": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "default": {
                  "label": "",
                  "value": ""
                }
              },
              "default": [
                {
                  "label": "",
                  "value": ""
                }
              ]
            }
          }
        },
        "widget": {
          "type": "string",
          "disabled": "true",
          "description": "Defines optimized input support for fitting to the selected attribute type",
          "enum": [
            "Datetime",
            "Date",
            "Born",
            "IntegerInput",
            "htmlInput:time",
            "Textarea",
            "Combo",
            "String",
            "htmlInput:month",
            "htmlInput:password",
            "htmlInput:date",
            "NativeDecimal",
            "Duration"
          ]
        },
        "section": {
          "type": "string"
        },
        "required": {
          "description": "Required Fields",
          "type": "boolean",
          "default": true
        },
        "readonly": {
          "type": "boolean",
          "default": true
        },
        "barcode": {
          "description": "True renders a barcode icon beside the input field. After pressing this button the barcode can be fetched via camera plugin.",
          "type": "boolean",
          "default": true
        },
        "labelHidden": {
          "type": "boolean",
          "default": true,
          "disabled": true,
          "enum": [true]
        },
        "floating": {
          "description": "The Attribute is next to the previous one.",
          "type": "string",
          "enum": ["fix", "responsive"],
          "default": "fix"
        },
        "control": {
          "description": "hidden, disabled, enabled or createOnly",
          "type": "string",
          "enum": ["enabled", "disabled", "hidden", "createOnly"],
          "default": ""
        },
        "clear": {
          "description": "Dosplays a small 'x' at the text field that allows to erase the entred value",
          "type": "boolean",
          "default": true,
          "enum": [true]
        },
        "clientProperties": {
          "type": "object",
          "minProperties": 1,
          "properties": {
            "excludeExpertSearch": {
              "type": "boolean",
              "description": "To exclude from expert search"
            },
            "colorClass": {
              "type": "string",
              "description": "Background color of the field",
              "enum": [
                "bg-color-red",
                "bg-color-yellow",
                "bg-color-green",
                "bg-color-blue",
                "bg-color-white",
                "bg-color-black",
                "bg-color-orange",
                "bg-color-light-red",
                "bg-color-light-yellow",
                "bg-color-light-green",
                "bg-color-light-blue",
                "bg-color-light-orange"
              ]
            },
            "readonlyClass": {
              "type": "string",
              "description": "Color and font of the field. (Example: bold color-red)",
              "enum": [
                "bold",
                "italic",
                "color-red",
                "color-yellow",
                "color-green",
                "color-blue",
                "color-white",
                "color-black",
                "color-orange",
                "color-light-red",
                "color-light-yellow",
                "color-light-green",
                "color-light-blue",
                "color-light-orange"
              ],
              "default": ""
            },
            "validation": {
              "type": "object",
              "properties": {
                "js": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array"
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "default": {
                "js": ["", ""]
              }
            },
            "attributeControl": {
              "type": "object",
              "properties": {
                "js": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "array"
                    }
                  ]
                }
              },
              "additionalProperties": false,
              "default": {
                "js": ["", ""]
              }
            },
            "search": {
              "type": "object",
              "properties": {
                "inResult": {
                  "type": "string",
                  "enum": ["show", "hide"],
                  "description": "Hide/Show an attribute in search result list"
                }
              }
            },
            "decimalPointHidden": {
              "type": "boolean",
              "description": "Decimal values: Hide the decimal point on the input dialog",
              "enum": [true],
              "default": true
            },
            "plusMinusHidden": {
              "description": "Decimal values: Hide the plus and minus buttons on the input dialog",
              "type": "boolean",
              "enum": [true],
              "default": true
            },
            "phone": {
              "type": "boolean",
              "description": "Show a call button",
              "enum": [true],
              "default": true
            },
            "floating": {
              "type": "string",
              "description": "Used to align attributes horizontally",
              "enum": ["fix", "responsive"]
            }
          }
        },
        "assignment": {
          "description": "Fills the given attribute dynamically with a value when the specified hook is triggered.",
          "type": "object",
          "properties": {
            "type": {
              "description": "Specifies the function to be called",
              "type": "string",
              "anyOf": [
                {
                  "enum": ["text"],
                  "description": "assigns a value"
                }
              ]
            },
            "value": {
              "description": "Formatted String with variables (see chapter Working with variables/values)",
              "type": "string"
            },
            "when": {
              "description": "Specifies the trigger",
              "type": "string",
              "oneOf": [
                {
                  "enum": ["afterRead"],
                  "description": "after reading the data"
                },
                {
                  "enum": ["beforeWrite"],
                  "description": "before sending back to the server"
                },
                {
                  "enum": ["onSave"],
                  "description": "save button pressed"
                }
              ]
            }
          },
          "default": {
            "type": "text",
            "value": "",
            "when": ""
          }
        },
        "selectFromTree": {
          "description": "Presents node instances of src Insight Config configuration (\"tree\") in a selection view ",
          "type": "object",
          "properties": {
            "tree": {
              "description": "specifies source Insight Config configuration",
              "type": "string"
            },
            "node": {
              "type": "string"
            },
            "attribute": {
              "description": "attribute of root node (in the referenced configuration specified in \"tree\")",
              "type": "string"
            },
            "search": {
              "description": "search name to use when selecting. The search must be defined in the given \"tree\". See: searches",
              "type": "string"
            },
            "autofill": {
              "description": "Array of attributes to be copied if selected",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "src": {
                    "description": "name of attribute (in the referenced configuration specified in \"tree\")",
                    "type": "string"
                  },
                  "dst": {
                    "description": "name of attribute in this node (in the enclosing configuration)",
                    "type": "string"
                  }
                }
              },
              "default": [
                {
                  "src": "",
                  "dst": ""
                }
              ]
            },
            "filter": {
              "description": "Map of filter attributes. Example: 'PARENT' : '${FAILURELIST}'",
              "type": "object",
              "default": {}
            }
          },
          "default": {
            "tree": "",
            "node": "",
            "attribute": ""
          }
        },
        "existsValidator": {
          "description": "Validates if user input matches a given attribute value of a root node instance in another Insight Config configuration (\"tree\")",
          "type": "object",
          "properties": {
            "tree": {
              "description": "specifies source Insight Config configuration",
              "type": "string"
            },
            "attribute": {
              "description": "attribute of root node (in the referenced configuration specified in \"tree\")",
              "type": "boolean"
            },
            "node": {
              "type": "string"
            },
            "autofill": {
              "description": "Array of attributes to be copied if validation succeeds",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "src": {
                    "title": "Source",
                    "description": "name of attribute (in the referenced configuration specified in „tree“)",
                    "type": "string"
                  },
                  "dst": {
                    "title": "Destination",
                    "description": "name of attribute in this node (in the enclosing configuration)",
                    "type": "string"
                  }
                }
              },
              "default": [
                {
                  "src": "",
                  "dst": ""
                }
              ]
            }
          }
        },
        "derived": {
          "description": "Attribute that is not persistent itself, but can be derived from persistent attributes",
          "oneOf": [
            {
              "title": "Date-Pattern",
              "description": "Allows to customize the format of date values",
              "properties": {
                "pattern": {
                  "description": "Pattern, the date value will be printed in",
                  "type": "string"
                },
                "attribute": {
                  "description": "name of the date attribute",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            {
              "title": "Regex",
              "description": "Applies regular expressions to string attributes",
              "properties": {
                "regex": {
                  "description": "the regular expression",
                  "type": "string"
                },
                "attribute": {
                  "description": "name of the attribute",
                  "type": "string"
                },
                "replacement": {
                  "description": "replacement of the expression (optional)",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            {
              "title": "Replace",
              "description": "Replaces placeholders with actual values",
              "properties": {
                "replace": {
                  "description": "Same Syntax as in node's label",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          ],
          "default": {}
        }
      },
      "additionalProperties": false,
      "default": {
        "name": "",
        "label": ""
      },
      "dependencies": {
        "formField": ["type"],
        "derived": ["type"]
      },
      "required": ["name", "label"]
    },
    "labelHiddenAttribute": {
      "title": "Attribute",
      "type": "object",
      "properties": {
        "labelHidden": {
          "type": "boolean",
          "default": true,
          "disabled": true,
          "enum": [true]
        },
        "name": {
          "$ref": "#/definitions/attribute/properties/name"
        },
        "type": {
          "$ref": "#/definitions/attribute/properties/type"
        },
        "columnWidth": {
          "$ref": "#/definitions/attribute/properties/columnWidth"
        },
        "format": {
          "$ref": "#/definitions/attribute/properties/format"
        },
        "formField": {
          "$ref": "#/definitions/attribute/properties/formField"
        },
        "options": {
          "$ref": "#/definitions/attribute/properties/options"
        },
        "widget": {
          "$ref": "#/definitions/attribute/properties/widget"
        },
        "section": {
          "$ref": "#/definitions/attribute/properties/section"
        },
        "required": {
          "$ref": "#/definitions/attribute/properties/required"
        },
        "readonly": {
          "$ref": "#/definitions/attribute/properties/readonly"
        },
        "barcode": {
          "$ref": "#/definitions/attribute/properties/barcode"
        },
        "floating": {
          "$ref": "#/definitions/attribute/properties/floating"
        },
        "control": {
          "$ref": "#/definitions/attribute/properties/control"
        },
        "clientProperties": {
          "$ref": "#/definitions/attribute/properties/clientProperties"
        },
        "assignment": {
          "$ref": "#/definitions/attribute/properties/assignment"
        },
        "selectFromTree": {
          "$ref": "#/definitions/attribute/properties/selectFromTree"
        },
        "existsValidator": {
          "$ref": "#/definitions/attribute/properties/existsValidator"
        },
        "derived": {
          "$ref": "#/definitions/attribute/properties/derived"
        }
      },
      "additionalProperties": false,
      "default": {
        "name": "",
        "label": "",
        "type": ""
      },
      "dependencies": {
        "formField": ["type"],
        "derived": ["type"]
      },
      "required": ["name"]
    },
    "listAttribute": {
      "title": "Attribute",
      "type": "object",
      "properties": {
        "name": {
          "$ref": "#/definitions/attribute/properties/name"
        },
        "label": {
          "$ref": "#/definitions/attribute/properties/label"
        },
        "style": {
          "description": "Helps user to identify the meaning of a menu item (web: Context Menu, mobile: Button in header of the detail section)",
          "type": "string"
        },
        "floating": {
          "$ref": "#/definitions/attribute/properties/floating"
        },
        "clientProperties": {
          "$ref": "#definitions/attribute/properties/clientProperties"
        },
        "control": {
          "$ref": "#definitions/attribute/properties/control"
        },
        "widget": {
          "$ref": "#definitions/attribute/properties/widget"
        },
        "format": {
          "$ref": "#/definitions/attribute/properties/format"
        },
        "tooltip": {
          "type": "string",
          "description": "Toopltip for the column. Can be both a static text, or dynamically via $-notation. Multiline enabled via '\n'",
          "default": "${}"
        },
        "suppressFilter": {
          "type": "boolean",
          "enum": [true],
          "default": true
        }
      },
      "additionalProperties": false,
      "default": {
        "name": ""
      },
      "required": ["name"]
    },
    "anyMenu": {
      "anyOf": [
        {
          "$ref": "#/definitions/menu"
        },
        {
          "$ref": "#/definitions/menuCreate"
        },
        {
          "$ref": "#/definitions/menuCreateSilent"
        },
        {
          "$ref": "#/definitions/menuDetails"
        },
        {
          "$ref": "#/definitions/menuRefresh"
        },
        {
          "$ref": "#/definitions/menuFilter"
        },
        {
          "$ref": "#/definitions/menuSave"
        },
        {
          "$ref": "#/definitions/menuRequest"
        },
        {
          "$ref": "#/definitions/menuRemove"
        }
      ]
    },
    "menuCreate": {
      "$ref": "#/definitions/menu",
      "default": {
        "label": "",
        "icon": "",
        "action": "create",
        "actionValues": [
          {
            "_tree": "",
            "_node": "",
            "attribute": "${value}"
          }
        ]
      }
    },
    "menuCreateSilent": {
      "$ref": "#/definitions/menu",
      "default": {
        "label": "",
        "icon": "",
        "action": "createSilent",
        "actionValues": [
          {
            "_tree": "",
            "_node": "",
            "attribute": "${value}"
          }
        ]
      }
    },
    "menuDetails": {
      "$ref": "#/definitions/menu",
      "default": {
        "label": "Details",
        "action": "details",
        "icon": "icon-question-circle"
      }
    },
    "menuRefresh": {
      "$ref": "#/definitions/menu",
      "default": {
        "label": "Refresh",
        "icon": "icon-refresh",
        "action": "refresh"
      }
    },
    "menuFilter": {
      "$ref": "#/definitions/menu",
      "default": {
        "label": "",
        "icon": "",
        "action": "filter",
        "visibleIn": ["mobile"],
        "actionValues": [
          {
            "attribute": "",
            "value": ""
          }
        ]
      }
    },
    "menuSave": {
      "$ref": "#/definitions/menu",
      "default": {
        "label": "",
        "icon": "",
        "action": "save",
        "actionValues": [
          {
            "attribute": "{$value}"
          }
        ]
      }
    },
    "menuRequest": {
      "$ref": "#/definitions/menu",
      "default": {
        "label": "",
        "icon": "",
        "action": "request",
        "actionValues": [
          {
            "successMessage": false
          }
        ],
        "request": {
          "url": "insight/action//",
          "method": "POST",
          "params": {
            "state": "${state}"
          },
          "headers": {
            "Accept": "application/json",
            "Content-Type": "application/json"
          }
        }
      }
    },
    "menuRemove": {
      "$ref": "#/definitions/menu",
      "default": {
        "label": "",
        "icon": "",
        "action": "remove",
        "actionValues": [
          {
            "_confirmMessage": "Do you really want to remove this object?",
            "successMessage": false
          }
        ],
        "request": {
          "url": "insight/action//",
          "method": "POST",
          "params": {
            "state": "${state}"
          },
          "headers": {
            "Accept": "application/json",
            "Content-Type": "application/json"
          }
        }
      }
    },
    "menu": {
      "type": "object",
      "properties": {
        "label": {
          "description": "Helps user to identify the meaning of a menu item (web: Context Menu, mobile: Button in header of the detail section)",
          "type": "string"
        },
        "shortLabel": {
          "description": "mobile: slide left/swipe on an entry in the list view)",
          "type": "string"
        },
        "icon": {
          "type": "string",
          "pattern": "^icon-[a-z-]+$",
          "default": ""
        },
        "singleId": {
          "description": "group actions together so they use the same tab",
          "type": "string",
          "pattern": "^[a-zA-Z-]+$",
          "default": ""
        },
        "roles": {
          "type": "array",
          "title": "Roles",
          "description": "Attach user roles to menu entry. Only available if role is available for user",
          "items": {
            "type": "string",
            "default": "SKIP-AUTHORIZATION"
          },
          "default": ["SKIP-AUTHORIZATION"]
        },
        "objects": {
          "type": "object",
          "description": "Function to further limit the visibility. Parameters are the user-profile of the logged in person and the current client -> (userData, client)",
          "properties": {
            "js": {
              "oneOf": [
                {
                  "type": "array"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          "default": {
            "js": ["", ""]
          }
        },
        "action": {
          "description": "specifies the type of action",
          "type": "string",
          "enum": [
            "open",
            "insert",
            "refresh",
            "details",
            "request",
            "save",
            "searchThis",
            "download",
            "create",
            "remove",
            "downloadRecord",
            "goto",
            "deleteLocal",
            "browser",
            "mapOpen",
            "mapCreate",
            "mapAttachNode",
            "kibanaOpen",
            "listEdit",
            "tableOpen",
            "filter",
            "online",
            "offline",
            "createSilent",
            "createForm",
            "form",
            "confirm",
            "geo",
            "planning",
            "fileView",
            "barcodeFilter",
            "staticContent",
            "fileUpload",
            "matrix"
          ]
        },
        "clientProperties": {
          "type": "object",
          "minProperties": 1,
          "properties": {
            "visible": {
              "type": "object",
              "default": {
                "_js": ""
              }
            }
          },
          "default": {
            "visible": {
              "_js": ""
            }
          }
        },
        "actionValues": {
          "description": "Special parameters corresponding to the listed action (see Actions)",
          "type": "array",
          "items": {
            "type": "object",
            "anyOf": [
              {
                "$ref": "#/definitions/ganttObject"
              },
              {
                "stop": "true",
                "freeProperties": "true",
                "properties": {
                  "static": {
                    "type": "string"
                  },
                  "dst": {
                    "type": "string"
                  },
                  "src": {
                    "type": "string"
                  },
                  "node": {
                    "type": "string"
                  },
                  "inTab": {
                    "type": "boolean"
                  },
                  "value": {
                    "type": "string"
                  },
                  "event": {
                    "type": "string"
                  },
                  "additionalevent": {
                    "type": "string"
                  },
                  "ga": {
                    "type": "string",
                    "title": "Businessactivity",
                    "description": "oid of Businessactivity to open"
                  },
                  "oid": {
                    "type": "string",
                    "title": "Businessobject",
                    "description": "oid of Businessobject to open"
                  },
                  "tree": {
                    "type": "string",
                    "title": "Tree-Configuration Name",
                    "description": "used to execute the action on a different tree configuration"
                  },
                  "tab": {
                    "type": "object",
                    "title": "object to configuration tab specific things"
                  },
                  "mode": {
                    "type": "string",
                    "title": "Only for the form action. Possible values are: 'temp' or 'save' (default). temp: Write only in the record/payload. save: Saves the record.",
                    "enum": ["temp", "save"]
                  },
                  "attributes": {
                    "type": "array",
                    "title": "Only for the form action. Array of attributes that can be entered. Properties of the attributes can be overridden or completly new.",
                    "items": {
                      "oneOf": [
                        {
                          "$ref": "#/definitions/attribute"
                        },
                        {
                          "$ref": "#/definitions/labelHiddenAttribute"
                        }
                      ],
                      "required": ["name"]
                    },
                    "default": []
                  },
                  "payloadKey": {
                    "type": "string",
                    "title": "Only for the request action. If the request action is part of a then-chain, the result can be passed to the next action."
                  },
                  "successMessage": {
                    "type": "boolean",
                    "title": "Flag to decide whether a successmessage should be shown for this particular action",
                    "default": false
                  },
                  "_confirmMessage": {
                    "type": "string",
                    "title": "Enables and prompts a message that gives the user an option to cofirm to execute the action",
                    "default": ""
                  }
                }
              }
            ]
          },
          "default": [{}]
        },
        "request": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "params": {
              "type": "object",
              "freeProperties": "true",
              "properties": {}
            },
            "headers": {
              "type": "object",
              "properties": {
                "Content-Type": {
                  "type": "string"
                }
              }
            }
          },
          "required": ["url"],
          "default": {
            "method": "POST",
            "url": "insight/eam/rpc/",
            "params": {},
            "headers": {
              "Content-Type": "application/x-www-form-urlencoded"
            }
          }
        },
        "separatorExpanded": {
          "type": "boolean",
          "default": false
        },
        "visibleIn": {
          "type": "array",
          "$ref": "#/definitions/visibleIn"
        },
        "menus": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/anyMenu"
          },
          "default": [
            {
              "label": "Details",
              "action": "details",
              "icon": "icon-question-circle"
            },
            {
              "label": "Aktualisieren",
              "icon": "icon-refresh",
              "action": "refresh"
            }
          ]
        },
        "when": {
          "description": "specifies when the action is triggered",
          "type": "string",
          "enum": ["onInit", "onSelect"],
          "default": ""
        },
        "then": {
          "$ref": "#definitions/thenMenu"
        }
      },
      "additionalProperties": false,
      "required": ["action", "label", "icon"],
      "default": {
        "label": "",
        "icon": "",
        "action": ""
      }
    },
    "thenMenu": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#definitions/menu/properties/action"
        },
        "clientProperties": {
          "$ref": "#definitions/menu/properties/clientProperties"
        },
        "actionValues": {
          "$ref": "#definitions/menu/properties/actionValues"
        },
        "request": {
          "$ref": "#definitions/menu/properties/request"
        },
        "separatorExpanded": {
          "$ref": "#definitions/menu/properties/separatorExpanded"
        },
        "objects": {
          "$ref": "#definitions/menu/properties/objects"
        },
        "then": {
          "$ref": "#definitions/thenMenu"
        }
      },
      "additionalProperties": false,
      "required": ["action"],
      "default": {
        "action": ""
      }
    },
    "thenMenuCreateSilent": {
      "$ref": "#/definitions/thenMenu",
      "default": {
        "action": "createSilent",
        "actionValues": [
          {
            "_tree": "",
            "_node": "",
            "attribute": "${value}"
          }
        ]
      }
    },
    "thenMenuRefresh": {
      "$ref": "#/definitions/thenMenu",
      "default": {
        "action": "refresh"
      }
    },
    "thenMenuRequest": {
      "$ref": "#/definitions/thenMenu",
      "default": {
        "action": "request",
        "actionValues": [
          {
            "successMessage": false
          }
        ],
        "request": {
          "url": "insight/action//",
          "method": "POST",
          "params": {
            "state": "${state}"
          },
          "headers": {
            "Accept": "application/json",
            "Content-Type": "application/json"
          }
        }
      }
    },
    "thenMenuRemove": {
      "$ref": "#/definitions/thenMenu",
      "default": {
        "action": "remove",
        "actionValues": [
          {
            "_confirmMessage": "Do you really want to remove this object?",
            "successMessage": false
          }
        ],
        "request": {
          "url": "insight/action//",
          "method": "POST",
          "params": {
            "state": "${state}"
          },
          "headers": {
            "Accept": "application/json",
            "Content-Type": "application/json"
          }
        }
      }
    },
    "ganttObject": {
      "type": "object",
      "properties": {
        "tab": {
          "type": "object",
          "properties": {
            "label": {
              "description": "Title of the Gantt Tab",
              "type": "string"
            }
          }
        },
        "gantt": {
          "type": "object",
          "properties": {
            "tree": {
              "type": "string",
              "description": "Name of the tree to use for gantt"
            },
            "expandRows": {
              "type": "boolean",
              "description": "initially expand all gantt-rows"
            },
            "columnConfiguration": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "object"
                }
              ]
            },
            "views": {
              "type": "array",
              "description": "Array of the views for gantt",
              "properties": {
                "range": {
                  "description": "the initial viewrange when opening gantt",
                  "type": "object",
                  "properties": {
                    "from": {
                      "description": "Date calculated by duration relative to reference date ( https://en.wikipedia.org/wiki/ISO_8601#Durations ).\nPrepend '-' for dates in the past (-P1M).\nDefault: \"-P1M\"",
                      "type": "string",
                      "default": "-P1M"
                    },
                    "to": {
                      "description": "Date calculated by duration relative to reference date ( https://en.wikipedia.org/wiki/ISO_8601#Durations ).\nDefault: \"P6M\"",
                      "type": "string",
                      "default": "P6M"
                    },
                    "step": {
                      "type": "string",
                      "description": "The amount of time to move the reference date forwards or backwards with the move-buttons. The default value depends on the precision.",
                      "default": "P1M"
                    }
                  }
                },
                "default": {
                  "type": "boolean",
                  "description": "use view as initial default"
                },
                "label": {
                  "type": "string",
                  "description": "The label of the view, defaults to the precision in readable format"
                },
                "icon": {
                  "description": "The icon of the view, defaults to a calender for precisions up to a day and else a clock.",
                  "type": "string",
                  "pattern": "^icon-[a-z-]+$",
                  "default": ""
                }
              }
            },
            "overlap": {
              "description": "visualize overlapping tasks in gantt chart",
              "type": "object",
              "properties": {
                "color": {
                  "type": "string",
                  "description": "color of overlapping borders"
                }
              }
            }
          }
        },
        "table": {
          "description": "configuration for tree to use below gantt",
          "type": "object",
          "properties": {
            "tree": {
              "type": "string",
              "description": "name of tree to use for table below gantt"
            }
          }
        }
      },
      "default": {
        "tab": {
          "label": "Planning"
        },
        "gantt": {
          "viewRange": {
            "from": "-P1M",
            "to": "P6M"
          },
          "precision": {
            "magnet": "P1D",
            "mode": "local"
          },
          "table": {
            "tree": ""
          }
        }
      }
    },
    "queryObject": {
      "title": "Query object",
      "type": "object",
      "description": "",
      "properties": {
        "direction": {
          "type": "string",
          "enum": ["TOP_DOWN", "BOTTOM_UP"]
        },
        "jetSearch": {
          "type": "string"
        },
        "orderBy": {
          "type": "string"
        },
        "indexer": {
          "type": "object",
          "$ref": "#/definitions/indexerObject"
        },
        "searches": {
          "type": "array",
          "description": "Defined searches can be configured to each node. These searches can be used to restrict the search space. By default, all attributes of all searches can be searched. At e.g. selectFromTree can also use an explicit search. This definition also reduces the size of the offline search model in mobile.",
          "items": {
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the search"
              },
              "label": {
                "type": "string",
                "description": "Label of the search"
              },
              "attributes": {
                "type": "array",
                "description": "Attribute to be in search space",
                "items": {
                  "type": "string"
                }
              },
              "backend": {
                "type": "boolean",
                "description": "Searches will be executed on the eam database tables. This currently only works with one attribute."
              }
            },
            "default": {
              "name": "",
              "label": "",
              "attributes": [""]
            }
          }
        },
        "parentMapping": {
          "type": "object",
          "description": "Can be used to define foreign keys to parent nodes. This is necessary to create offline objects with subobjects."
        }
      },
      "additionalProperties": false,
      "default": {
        "indexer": {
          "mode": ""
        }
      }
    },
    "table": {
      "description": "configuration for tree to use below gantt",
      "type": "object",
      "properties": {
        "tree": {
          "type": "string",
          "description": "name of tree to use for table below gantt"
        }
      }
    },
    "constraintObject": {
      "title": "",
      "description": "",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "attribute": {
            "type": "string"
          },
          "operator": {
            "type": "string",
            "enum": [
              "eq",
              "ne",
              "lt",
              "le",
              "gt",
              "ge",
              "in",
              "notIn",
              "isNull",
              "notNull"
            ]
          },
          "value": {},
          "and": {
            "$ref": "#/definitions/constraintObject"
          },
          "or": {
            "$ref": "#/definitions/constraintObject"
          },
          "not": {
            "$ref": "#/definitions/constraintObject"
          }
        },
        "additionalProperties": false
      },
      "default": []
    },
    "indexerObject": {
      "type": "object",
      "properties": {
        "parentRelation": {
          "type": "string"
        },
        "mode": {
          "type": "string",
          "description": "cut off nodes and whole branches for optimizing redundant data",
          "enum": ["stop", "noChildren"]
        }
      }
    },
    "httpRequestObject": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "method": {
          "type": "string",
          "description": "http method",
          "enum": ["GET", "POST"]
        },
        "params": {
          "description": "http POST or GET parameters",
          "type": "object"
        },
        "header": {
          "description": "http headers",
          "type": "object"
        }
      },
      "required": ["url"],
      "default": {
        "url": ""
      }
    }
  }
}

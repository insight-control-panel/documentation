<!DOCTYPE HTML>
<html>
<head>
   <title>Insight Configuration &gt; Layout &gt; Style</title>
   <meta name="generator" content="Help & Manual">
   <meta name="keywords" content="">
   <meta name="description" content="Style">
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="X-UA-Compatible" content="IE=edge" />
   <link type="text/css" href="default.css" rel="stylesheet">
   <link type="text/css" href="custom.css" rel="stylesheet">
   <script type="text/javascript" src="nsh.js"></script>

<script type="text/javascript">   
// Toggle Toggler 

var toggleCount=false;
var switchState;

function toggleToggles() {

    if (!toggleCount) {
     toggleCount = true;
     HMToggleExpandAll(true);
     switchState = true;
     }
   
     else if (switchState) {
        HMToggleExpandAll(false);
        switchState = false;
        }
        
     else  {
        HMToggleExpandAll(true);
        switchState = true;
        } 
    }
</script>
   
<!-- non-scrolling headers for CHM and browser-based help, local styles-->
<style type="text/css" media="screen"> 
html, body {    
      margin:0; 
      padding:0; 
      overflow: hidden; 
      background: #FFFFFF; 
   }
 
div#printheader { 
   display: none;
   }
   #idheader { 
      width:100%; 
      height:auto; 
      padding: 0; 
      margin: 0; 
} 
    #idheaderbg  {
    background: #6F6F6F; 
}
   #callout-table, #overview-table {display:block; position:relative; top:0; left:0;}
   #callout-icon {display:block; position:absolute; top:-11px; left:-11px;}
   #callout-icon-flag {display:block; position:absolute; top:-11px; left:-8px;}
   #callout-table a {text-decoration: none; color: blue;}
   #callout-table a:visited {text-decoration: none; color: blue;}
   #overview-table a {text-decoration: none; color: black;}
   #overview-table a:visited {text-decoration: none; color: black;}
   #callout-table a:hover, #overview-table a:hover {text-decoration: underline;}
   p.help-url { margin: 20px 0 5px 0; text-align: center; font-size: 80%; text-decoration: none }
   .sync-toc { color: #ffffff; font-size: 8pt; font-weight: bold; display: none; }
   .sync-toc a { color: #ffffff; text-decoration: none; font-weight: bold;}
   .sync-toc a:visited { color: #ffffff; }
   .sync-toc a:hover { text-decoration: underline; }
   </style>
<!--[if lt IE 7]>
<style type="text/css">
  #idcontent {padding: 0px;} 
  #innerdiv {padding: 10px 5px 5px 10px ;} 
</style> 
<![endif]-->
   <noscript>
   <style type="text/css">
   html, body { overflow: auto; }
   </style> 
   </noscript>
<style type="text/css" media="print">
span.f_Heading1 { color: black; }
#idheader, #printheader img { display:none; }
#printheader { display: block; margin-top: 20px; }
#idcontent { margin-top: 10px; }
</style>   
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "toc464133690.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body>
<!--ZOOMSTOP-->


<div id="printheader"><h1 class="p_Heading1"><span class="f_Heading1">Style</span></h1>
</div>
<div id="idheader">
<div id="idheaderbg">
<table width="100%" border="0" cellspacing="0" cellpadding="0" 
       style="margin: 0px; background: url(header_bg.jpg);">

  <tr valign="bottom">
    <td align="left" valign="bottom" class="topichead">
   <p class="sync-toc">&lt;&lt; <a rel="nofollow" href="index.html?toc464133690.htm" target="_top">Click to Display Table of Contents</a> &gt;&gt;</p>
   <p class="crumbs" id="idnav"><b>Navigation:</b>&nbsp;
   
   <a href="configuration.htm">Insight Configuration</a> &gt; <a href="layout.htm">Layout</a>&nbsp;&gt;</p>
   <h1 class="p_Heading1"><span class="f_Heading1">Style</span></h1>

    </td>
    <td align="right" width="120" valign="middle" class="topichead" id="idnav">
    
     <a href="toc464133689.htm"
        onmouseover="document.images.prev.src='btn_prev_h.gif'" 
        onmouseout="document.images.prev.src='btn_prev_n.gif'"
        ><img name=prev src="btn_prev_n.gif" border=0 alt="Previous page"
        ></a><a href="layout.htm"
        onmouseover="document.images.main.src='btn_home_h.gif'" 
        onmouseout="document.images.main.src='btn_home_n.gif'"><img name=main src="btn_home_n.gif" border=0 alt="Return to chapter overview"
        ></a><a href="toc464133691.htm"
        onmouseover="document.images.next.src='btn_next_h.gif'" 
        onmouseout="document.images.next.src='btn_next_n.gif'"><img name=next src="btn_next_n.gif" border=0 alt="Next page"
        ></a>
    </td>
  </tr>
  <tr><td colspan="2" style="height: 3px; background: url(header_bg_shadow.gif)"></td></tr>
</table>
</div>

<!-- The following code displays Expand All/Collapse All links  below the header in topics containing toggles -->
  

</div>  



<div id="idcontent"><div id="innerdiv"> 
<!--ZOOMRESTART-->
<p class="p__GiS_Std"><span class="f__GiS_Std">The style property can be used to decorate list entries. It is possible to reflect the specific values of important attributes in the choice of </span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 10px 0px 10px 47px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: 1.20;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:30px"><span style="font-size:10pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f__GiS_Aufz-1">signal color or </span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 10px 0px 10px 47px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: 1.20;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:30px"><span style="font-size:10pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f__GiS_Aufz-1">icon  </span></td></tr></table></div><p class="p__GiS_Aufz-1" style="text-indent: 0px; margin: 10px 0px 10px 0px;"><span class="f__GiS_Aufz-1">This is done by implementing a JavaScript method as follows:</span></p>
<p style="line-height: 1.20; border-color: #000000; border-style: solid; border-width: 0px; background: #e6e6e6; padding: 2px 2px 2px 2px; margin: 1px 45px 1px 45px;"><span class="f__GiS_Codeexample">&quot;style&quot;: {</span></p>
<p style="line-height: 1.20; border-color: #000000; border-style: solid; border-width: 0px; background: #e6e6e6; padding: 2px 2px 2px 2px; margin: 1px 45px 1px 45px;"><span class="f__GiS_Codeexample"> &nbsp; &quot;js&quot;: “return 'bg-color-red signal';&quot;</span></p>
<p style="line-height: 1.20; border-color: #000000; border-style: solid; border-width: 0px; background: #e6e6e6; padding: 2px 2px 2px 2px; margin: 1px 45px 1px 45px;"><span class="f__GiS_Codeexample">}</span></p>
<p class="p__GiS_Std"><span class="f__GiS_Std">As a result each line comes up with a red signal. </span></p>
<p class="p__GiS_Std"><span class="f__GiS_Std">You can change the color of the node icon as well:</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample">&quot;style&quot;: {</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample"> &nbsp; &quot;js&quot;: &quot;node.icon = node.icon + ' color-blue';&quot;</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample">}</span></p>
<p class="p__GiS_Std"><span class="f__GiS_Std">As a result the configured node icons are presented with a blue (foreground) color.</span></p>
<p class="p__GiS_Std"><span class="f__GiS_Std">It is even possible to change the configured node icon:</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample">&quot;style&quot;: {</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample"> &nbsp; &quot;js&quot;: “node.icon = 'icon-check color-green';”</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample">}</span></p>
<p class="p__GiS_Std"><span class="f__GiS_Std">To create the decoration dynamically according to the current object properties the following parameters can be used </span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 10px 0px 10px 47px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: 1.20;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:30px"><span style="font-size:10pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#9997;</span></td><td style="border:none"><span class="f__GiS_Aufz-1">current.properties</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 10px 0px 10px 47px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: 1.20;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:30px"><span style="font-size:10pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#9997;</span></td><td style="border:none"><span class="f__GiS_Aufz-1">userData</span></td></tr></table></div><p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample">&quot;style&quot;: {</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample"> &nbsp; &quot;js&quot;: [</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample"> &nbsp; &nbsp; &nbsp;&quot;if (current.properties.STATUS == 'RUNNING') {&quot;,</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample"> &nbsp; &nbsp; &nbsp;&quot; &nbsp;node.icon = node.icon + 'color-blue';&quot;,</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample"> &nbsp; &nbsp; &nbsp;&quot;}&quot;,</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample"> &nbsp; &nbsp; &nbsp;&quot;else if (current.properties.STATUS == 'FINISHED') {&quot;,</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample"> &nbsp; &nbsp; &nbsp;&quot; &nbsp;node.icon = node.icon + 'color-green';&quot;,</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample"> &nbsp; &nbsp; &nbsp;&quot;}&quot;</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample"> &nbsp; ]</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample">}</span></p>
<p class="p__GiS_Std"><span class="f__GiS_Std">The following example combines the concepts mentioned above (see template worklist) :</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample" style="font-size: 8pt;">&quot;style&quot;: </span><span class="f__GiS_Codeexample">{</span></p>
<p class="p__GiS_Codeexample"><span style="width:76px">&nbsp;</span><span class="f__GiS_Codeexample" style="font-size: 7pt;">&quot;js&quot;: &quot;node.icon = current.properties.STATUS == 'COMP' ? 'icon-checkmark-circle color-green' : userData.personid == current.properties.OWNER ? 'icon-user' : current.properties.STATUS == 'INPRG' ? 'icon-walk' : 'icon-wrench'; </span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample" style="font-size: 7pt;">return current.properties.WOPRIORITY == 1 ? 'bg-color-red signal' : ( current.properties.WOPRIORITY == 2 ? 'bg-color-yellow signal' : 'signal');</span><span class="f__GiS_Codeexample" style="font-size: 8pt;">&quot;</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample">}</span></p>
<p class="p__GiS_Std"><span class="f__GiS_Std">isReady is injected as parameter. This can be used to visualize the working progress. see <a href="isready.htm" class="topiclink">isReady</a></span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample">&quot;style&quot;: {</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample"> &nbsp; &quot;js&quot;: &quot;node.icon = isReady ? 'icon-checkmark-circle' : 'icon-wrench';&quot;</span></p>
<p class="p__GiS_Codeexample"><span class="f__GiS_Codeexample">}</span></p>

<!--ZOOMSTOP-->
</div></div>
<script type="text/javascript">

var lastSlashPos = document.URL.lastIndexOf("/") > document.URL.lastIndexOf("\\") ? document.URL.lastIndexOf("/") : document.URL.lastIndexOf("\\");
if( document.URL.substring(lastSlashPos + 1, lastSlashPos + 4).toLowerCase() != "~hh" )
{
 if (document.all) setTimeout(function() {nsrInit();},20); 
    else nsrInit();
 } 

if ((!parent.hmNavigationFrame) && (parent.location) && (parent.location.href)) { $('.sync-toc').show();$('p.crumbs').hide();}

</script>
</body>
</html>







